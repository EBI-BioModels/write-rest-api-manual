
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#
# The conversion system has the following limitations:
#  - You may have to re order some reactions and Assignment Rules definition
#  - Delays are not taken into account
#  - You should change the lsode parameters (start, end, steps) to get better results
#

#
# The following line is there to be sure that Octave think that this file 
# is a script and not function file
#
1;

#
# Model name = Holmes2006_MuscleContration
#
# is urn:miriam:biomodels.db:MODEL1006230007
# isDescribedBy urn:miriam:pubmed:16709736
#
function z=pow(x,y),z=x^y;endfunction
function z=root(x,y),z=y^(1/x);endfunction
function z = piecewise(varargin)
	numArgs = nargin;
	result = 0;
	foundResult = 0;
	for k=1:2: numArgs-1
		if varargin{k+1} == 1
			result = varargin{k};
			foundResult = 1;
			break;
		endif
	end
	if foundResult == 0
		result = varargin{numArgs};
	endif
z = result;
endfunction

function xdot=f(x,t)
# Compartment: id = COMpartment, name = COMpartment, constant
	compartment_COMpartment=1.0;
# Parameter:   id =  a, name = a
	global_par_a=37.24;
# Parameter:   id =  b, name = b
	global_par_b=0.325;
# Parameter:   id =  Po, name = Po
	global_par_Po=144.9;
# Parameter:   id =  alpha, name = alpha
	global_par_alpha=1449.027;
# Parameter:   id =  L_se_o, name = L_se_o
	global_par_L_se_o=0.3;
# Parameter:   id =  L, name = L
# Parameter:   id =  v, name = v
# Parameter:   id =  L_se, name = L_se
# Parameter:   id =  L_ce, name = L_ce
# Parameter:   id =  P, name = P
# rateRule: variable = L_ce
global_par_L_ce = x(1);
# assignmentRule: variable = L_se
	global_par_L_se=global_par_L-global_par_L_ce;
# assignmentRule: variable = L
	global_par_L=piecewise(1, time <= 1, 0.92, (time > 1) and (time < 5), 0.9);
# assignmentRule: variable = P
	global_par_P=global_par_alpha*(global_par_L_se-global_par_L_se_o);
# assignmentRule: variable = v
	global_par_v=(-global_par_b)*(global_par_Po-global_par_P)/(global_par_P+global_par_a);
	xdot=zeros(1,1);
	# rateRule: variable = L_ce
	xdot(1) = global_par_v;

endfunction

#Initial conditions vector
x0=zeros(1,1);
x0(1) = 0.7;


#Creating linespace
t=linspace(0,90,100);

#Solving equations
x=lsode("f",x0,t);

#ploting the results
plot(t,x);
